{"version":3,"sources":["api.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoList","memo","todos","selectedTodoId","onSelectTodo","className","map","todo","id","completed","cn","title","type","onClick","TodoFilter","query","setQuery","filter","setFilter","value","onChange","event","target","placeholder","style","pointerEvents","Loader","TodoModal","onClose","selectedTodo","useState","selectedUser","setSelectedUser","useEffect","userId","user","href","email","name","App","setTodos","isLoading","setIsLoading","setSelectedTodoId","searchQuery","setSearchQuery","filterBySelect","setFilterBySelect","visibleTodos","useMemo","normalizedTitle","toLowerCase","normalizedQuery","trim","isQueryMatched","includes","isFilterBySelectMatched","finally","onCloseModal","useCallback","find","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bb30f22c.chunk.js","sourcesContent":["import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { memo } from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todos: Todo[],\n  selectedTodoId: number,\n  onSelectTodo: (id: number) => void,\n}\n\nexport const TodoList: React.FC<Props> = memo(({\n  todos,\n  selectedTodoId,\n  onSelectTodo,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => (\n        <tr\n          data-cy=\"todo\"\n          key={todo.id}\n        >\n          <td className=\"is-vcentered\">{todo.id}</td>\n          <td className=\"is-vcentered\">\n            {todo.completed && (\n              <span className=\"icon\" data-cy=\"iconCompleted\">\n                <i className=\"fas fa-check\" />\n              </span>\n            )}\n          </td>\n\n          <td className=\"is-vcentered is-expanded\">\n            <p\n              className={cn({\n                'has-text-danger': !todo.completed,\n                'has-text-success': todo.completed,\n              })}\n            >\n              {todo.title}\n            </p>\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n            {selectedTodoId === todo.id\n              ? (\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => onSelectTodo(0)}\n                >\n                  <span className=\"icon\">\n                    <i className=\"far fa-eye-slash\" />\n                  </span>\n                </button>\n              ) : (\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => onSelectTodo(todo.id)}\n                >\n                  <span className=\"icon\">\n                    <i className=\"far fa-eye\" />\n                  </span>\n                </button>\n              )}\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n));\n","import { FC, memo } from 'react';\n\nexport interface Props {\n  query: string,\n  setQuery: (value: string) => void,\n  filter: string,\n  setFilter: (value: string) => void,\n}\n\nexport const TodoFilter: FC<Props> = memo(({\n  query,\n  setQuery,\n  filter,\n  setFilter,\n}) => {\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={filter}\n            onChange={(event) => setFilter(event.target.value)}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={(event) => setQuery(event.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n        {query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => setQuery('')}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n});\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState, memo } from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\n\ninterface Props {\n  onClose: () => void,\n  selectedTodo: Todo;\n}\nexport const TodoModal: React.FC<Props> = memo((\n  { onClose, selectedTodo },\n) => {\n  const [selectedUser, setSelectedUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    try {\n      getUser(selectedTodo.id)\n        .then(user => setSelectedUser(user));\n    } catch {\n      setSelectedUser(null);\n    }\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!selectedUser\n        ? (\n          <Loader />\n        ) : (\n          <div className=\"modal-card\">\n            <header className=\"modal-card-head\">\n              <div\n                className=\"modal-card-title has-text-weight-medium\"\n                data-cy=\"modal-header\"\n              >\n                {`Todo #${selectedTodo.id}`}\n              </div>\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              <button\n                type=\"button\"\n                className=\"delete\"\n                data-cy=\"modal-close\"\n                onClick={onClose}\n              />\n            </header>\n\n            <div className=\"modal-card-body\">\n              <p className=\"block\" data-cy=\"modal-title\">\n                {selectedTodo.title}\n              </p>\n\n              <p className=\"block\" data-cy=\"modal-user\">\n                {selectedTodo.completed\n                  ? (\n                    <strong className=\"has-text-success\">Done</strong>\n                  ) : (\n                    <strong className=\"has-text-danger\">Planned</strong>\n                  )}\n\n                {' by '}\n\n                <a href={`mailto:${selectedUser.email}`}>\n                  {selectedUser.name}\n                </a>\n              </p>\n            </div>\n          </div>\n        )}\n    </div>\n  );\n});\n","/* eslint-disable max-len */\nimport React, {\n  useCallback,\n  useEffect,\n  useMemo,\n  useState,\n} from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport { getTodos } from './api';\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const [selectedTodoId, setSelectedTodoId] = useState<number>(0);\n  const [searchQuery, setSearchQuery] = useState<string>('');\n  const [filterBySelect, setFilterBySelect] = useState<string>('all');\n\n  const visibleTodos = useMemo(() => (\n    todos.filter(todo => {\n      const normalizedTitle = todo.title.toLowerCase();\n      const normalizedQuery = searchQuery.toLowerCase().trim();\n      const isQueryMatched = normalizedTitle.includes(normalizedQuery);\n\n      let isFilterBySelectMatched = null;\n\n      switch (filterBySelect) {\n        case 'active':\n          isFilterBySelectMatched = !todo.completed;\n          break;\n\n        case 'completed':\n          isFilterBySelectMatched = todo.completed;\n          break;\n\n        default:\n          isFilterBySelectMatched = true;\n          break;\n      }\n\n      return isQueryMatched && isFilterBySelectMatched;\n    })\n  ), [todos, filterBySelect, searchQuery]);\n\n  useEffect(() => {\n    setIsLoading(true);\n    getTodos()\n      .then(todo => {\n        return setTodos(todo);\n      })\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  const onCloseModal = useCallback(() => setSelectedTodoId(0), []);\n  const onSelectTodo = useCallback((id: number) => setSelectedTodoId(id), []);\n  const setQuery = useCallback((value: string) => setSearchQuery(value), []);\n  const setFilter = useCallback((value: string) => setFilterBySelect(value), []);\n\n  const selectedTodo = useMemo(() => (\n    todos.find(todo => todo.id === selectedTodoId)\n  ), [todos, selectedTodoId]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                query={searchQuery}\n                setQuery={setQuery}\n                filter={filterBySelect}\n                setFilter={setFilter}\n              />\n            </div>\n\n            <div className=\"block\">\n              {isLoading ? (\n                <Loader />\n              ) : (\n                <TodoList\n                  todos={visibleTodos}\n                  selectedTodoId={selectedTodoId}\n                  onSelectTodo={onSelectTodo}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n      {selectedTodo && (\n        <TodoModal\n          onClose={onCloseModal}\n          selectedTodo={selectedTodo}\n        />\n      )}\n\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}